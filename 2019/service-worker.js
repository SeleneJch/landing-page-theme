"use strict";var precacheConfig=[["/2019/index.html","fc871fd5071bdd7addb3f3cb3ff02b42"],["/2019/static/css/main.7d0f351a.css","fba6f17c79283d7dad4527245ba040a4"],["/2019/static/js/main.6c2ec458.js","f725565f3db7bfadd832e60df07a6bdc"],["/2019/static/media/10636419_10203880244832112_3086301521967770082_o.e4456ed7.jpg","e4456ed7d4569bd205516ff49e2ad65d"],["/2019/static/media/14362711_1443783055638586_3924866533217962148_o.e5215d5b.jpg","e5215d5b55593d2ae7476ef391add8cb"],["/2019/static/media/Hanpo_Avatar.d3631d5e.jpg","d3631d5e76408a94d45367a0ebb0f5b5"],["/2019/static/media/iplayground_logo_ball.1723aa9b.png","1723aa9bd472765642849ccb30fa8d8a"],["/2019/static/media/iplayground_logo_diamond.8fa1c014.png","8fa1c0147b3cff9344e750f750d81d4a"],["/2019/static/media/iplayground_logo_stairs.b9d4a50b.png","b9d4a50bf8f8eca64985bbff149c6720"],["/2019/static/media/logo_5xruby.tw.d31ab51a.png","d31ab51ae93801c15b2b569ef1e11cb6"],["/2019/static/media/logo_catchplay.53864291.png","5386429112444c5ab108c85316db5c95"],["/2019/static/media/logo_cocoaheads_taipei.04bde3ff.png","04bde3ff74c544e0a126cfa3a94307a5"],["/2019/static/media/logo_dcard.dd5423a9.png","dd5423a94b0b99c472b985a2c14c18c8"],["/2019/static/media/logo_esun.412fc611.png","412fc611329bdfbd60da1f6938b64a59"],["/2019/static/media/logo_iplayground.da8f6e68.png","da8f6e688df7c831e213e0c5390416b4"],["/2019/static/media/logo_keyxentic.185b57fe.png","185b57fe147194909ef03782e8d8c302"],["/2019/static/media/logo_pic-collage.060d67d7.png","060d67d71ebcbdbf25fb588f5a748ec7"],["/2019/static/media/logo_swift_girls.e221c42c.png","e221c42c05790a392b97ad4ee8fd66aa"],["/2019/static/media/meme.705091af.png","705091af9edca50f6a3cfb145762a758"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="/2019/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});